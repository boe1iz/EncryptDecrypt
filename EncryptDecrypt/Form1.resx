<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAzM8yaMzPM5jMzzOwzM8ycMzPMXjMzzDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzM8wCMzPMJDMzzEozM8xqMzPMgjMz
        zEAAAAAAMzPMEjMzzP8zM8z/MzPM/zMzzP8zM8z/MzPMxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzzBAzM8xkMzPMsDMzzO4zM8z/MzPM/zMz
        zP8zM8z/MzPMdAAAAAAzM8waMzPM/zMzzIgzM8x6MzPM/zMzzP8zM8zgMzPMaDMzzDoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzzBQzM8yQMzPM9DMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8yGAAAAADMzzAQzM8zUMzPM2jMzzBgzM8xsMzPM/DMzzP8zM8z/MzPMyAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzM8xEMzPM6DMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzNAzM8wCAAAAADMzzBozM8zaMzPM0jMzzBQzM8xoMzPM/DMz
        zP8zM8ziMzPMZjMzzDoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzPMNDMzzPYzM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/DMzzIQAAAAAAAAAADMzzB4zM8zeMzPM0DMz
        zBQzM8xmMzPM/DMzzP8zM8zYMzPMXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzM8y2MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8zcMzPMnjMzzGwzM8xEMzPMJjMzzBAzM8wEMzPMAgAAAAAAAAAAAAAAADMz
        zB4zM8zeMzPM0DMzzBQzM8xiMzPMgDMzzAQzM8wwMzPMgDMzzJYzM8yGMzPMPjMzzAAAAAAAAAAAADMz
        zNozM8z/MzPM/zMzzOwzM8yIMzPMLAAAAAAAAAAAMzPMADMzzBozM8w8MzPMUDMzzFYzM8xYMzPMWDMz
        zEwAAAAAAAAAADMzzB4zM8zcMzPMzDMzzAozM8wKMzPMpDMzzP8zM8z/MzPM/zMzzP8zM8z/MzPMtjMz
        zBIAAAAAMzPM3jMzzPwzM8yOMzPMEDMzzAAzM8wwMzPMfDMzzLwzM8zuMzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzIgAAAAAAAAAADMzzB4zM8ygMzPMAjMzzLAzM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPMxjMzzAQzM8zcMzPMWDMzzAIzM8xcMzPM0DMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzIgzM8wAAAAAAAAAAAAzM8xKMzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPMZDMzzGozM8wgMzPMyDMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzH4AAAAAAAAAADMzzJ4zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8y6MzPMIDMzzOIzM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPMvgAAAAAAAAAAMzPMwDMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM+DMzzNYzM8z8MzPM/zMzzNwzM8yiMzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z8MzPM0DMzzJ4zM8x2MzPMWDMzzEIzM8w2MzPMMjMzzDYzM8xCMzPMVjMzzHIzM8xuAAAAAAAA
        AAAzM8yyMzPM/zMzzP8zM8z/MzPM/zMzzO4zM8wmAAAAADMzzEIzM8z8MzPM0DMzzNYzM8z/MzPM/zMz
        zP8zM8y8MzPMXDMzzBQAAAAAAAAAAAAAAAAzM8wGMzPMGDMzzCYzM8wqMzPMJjMzzBozM8wGAAAAAAAA
        AAAAAAAAAAAAADMzzHYzM8z/MzPM/zMzzP8zM8z/MzPMsAAAAAAAAAAAAAAAADMzzNgzM8ySMzPM3jMz
        zP8zM8zAMzPMNAAAAAAzM8wKMzPMSjMzzIozM8y8MzPM5DMzzPwzM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zPwzM8zkMzPMvDMzzDQAAAAAMzPMEjMzzOgzM8z/MzPM/zMzzP8zM8ziMzPMDgAAAAAzM8wmMzPM7jMz
        zCIzM8zeMzPMiDMzzAIzM8wsMzPMnjMzzPIzM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPMtgAAAAAAAAAAMzPMPjMzzPAzM8z/MzPM/zMzzP8zM8zgMzPMrjMz
        zOYzM8xQAAAAADMzzIozM8wKMzPMljMzzPwzM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPMZAAAAAAAAAAAMzPMIjMzzKIzM8zwMzPM/zMz
        zPQzM8yuMzPMLgAAAAAAAAAAMzPMIDMzzMgzM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z4MzPMWAAAAAAAAAAAAAAAADMz
        zAIzM8wKMzPMAgAAAAAAAAAAAAAAAAAAAAAzM8yKMzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM+jMz
        zNIzM8yoMzPMiDMzzHYzM8xwMzPMbDMzzG4zM8x0MzPMhjMzzKYzM8zSMzPM+jMzzP8zM8z8MzPMmDMz
        zBoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzzNIzM8z/MzPM/zMzzP8zM8zqMzPMkjMz
        zEYzM8wMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzM8wMMzPMRjMz
        zJQzM8zoMzPM+jMzzL4zM8yKMzPMbgAAAAAAAAAAAAAAAAAAAAAAAAAAMzPM3DMzzP8zM8zmMzPMaDMz
        zAgAAAAAMzPMFDMzzFIzM8yGMzPMsDMzzNIzM8zkMzPM7DMzzO4zM8zsMzPM5DMzzNIzM8ywMzPMhjMz
        zFQzM8wWAAAAADMzzAYzM8xkMzPM4jMzzP8zM8z0AAAAAAAAAAAAAAAAAAAAAAAAAAAzM8zeMzPMuDMz
        zBIzM8wMMzPMaDMzzMYzM8z8MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzPwzM8zGMzPMbDMzzA4zM8wOMzPMrjMzzPQAAAAAAAAAAAAAAAAAAAAAAAAAADMz
        zKYzM8wIMzPMZDMzzOozM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM7DMzzGwzM8wGMzPMsgAAAAAAAAAAAAAAAAAA
        AAAAAAAAMzPMHjMzzJ4zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzKYzM8wsAAAAAAAA
        AAAAAAAAAAAAAAAAAAAzM8xsMzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zHYAAAAAAAAAAAAAAAAAAAAAAAAAADMzzM4zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM2AAAAAAAAAAAAAAAAAAAAAAAAAAAMzPMzjMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8zYAAAAAAAAAAAAAAAAAAAAAAAAAAAzM8xqMzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzHYAAAAAAAAAAAAAAAAAAAAAAAAAADMzzAAzM8yYMzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8ykMzPMAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMz
        zAAzM8xcMzPM5DMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8zoMzPMZDMzzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAzM8wIMzPMYDMzzMAzM8z6MzPM/zMzzP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMz
        zP8zM8z/MzPM/zMzzP8zM8z/MzPM/zMzzPwzM8zEMzPMZjMzzAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzzBIzM8xOMzPMgjMzzKwzM8zMMzPM4jMz
        zOwzM8zuMzPM6jMzzOIzM8zMMzPMrjMzzIYzM8xSMzPMFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//4f///uB//8Dkf/4AZh/8AHMf+AA5j/AP/Njwf/5gMeAHQBcAA8AcAA
        OACAABgAAH/4HAf//BweABwdMAAOA0AADweAAAf/AB8B/wP/+D8fAB8fOAADn2AAAN+AAAA/gAAAPwAA
        AB8AAAAfgAAAP4AAAD/gAAD/+AAD//8AH/8=
</value>
  </data>
</root>